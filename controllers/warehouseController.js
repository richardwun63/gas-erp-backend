// controllers/warehouseController.js
const pool = require('../db/db');
const listWarehouses = async (req, res) => { try { const [whs]=await pool.execute('SELECT warehouse_id, name, address, is_active FROM Warehouses ORDER BY name ASC'); res.status(200).json(whs); } catch (e) { console.error('Err listWH:', e); res.status(500).json({ message:'Err obtener alm.', error:e.message }); }};
const createWarehouse = async (req, res) => { const { name, address } = req.body; if (!name) return res.status(400).json({ message:'Nombre obligatorio.' }); try { const [r]=await pool.execute('INSERT INTO Warehouses (name, address, is_active) VALUES (?, ?, TRUE)',[name, address||null]); res.status(201).json({ message:'Almacén creado.', warehouseId:r.insertId }); } catch (e) { console.error('Err createWH:', e); if (e.code==='ER_DUP_ENTRY') return res.status(400).json({ message:'Nombre ya existe.'}); res.status(500).json({ message:'Error crear alm.', error:e.message }); }};
const updateWarehouse = async (req, res) => { const id=req.params.id; const {name,address}=req.body; if(!name&&address===undefined) return res.status(400).json({ message:'name o address req.'}); let setC=[]; const p=[]; if(name){setC.push('name=?');p.push(name);} if(address!==undefined){setC.push('address=?');p.push(address||null);} if(setC.length===0) return res.status(400).json({ message:'No campos válidos.'}); p.push(id); try { const [r]=await pool.execute(`UPDATE Warehouses SET ${setC.join(',')} WHERE warehouse_id=?`,p); if(r.affectedRows===0) return res.status(404).json({ message:`Almacén ID ${id} no.`}); res.status(200).json({ message:'Almacén actualizado.'}); } catch (e) { console.error('Err updateWH:', e); if (e.code==='ER_DUP_ENTRY') return res.status(400).json({ message:'Nombre ya existe.'}); res.status(500).json({ message:'Error actualizar alm.', error:e.message }); }};
const toggleWarehouseStatus = async (req, res) => { const id=req.params.id; const {is_active}=req.body; if(is_active===undefined||typeof is_active!=='boolean') return res.status(400).json({ message:'is_active (true/false) req.'}); try { const [r]=await pool.execute('UPDATE Warehouses SET is_active=? WHERE warehouse_id=?',[is_active,id]); if(r.affectedRows===0) return res.status(404).json({ message:`Almacén ID ${id} no.`}); res.status(200).json({ message:`Almacén ${is_active?'activado':'desactivado'}.`}); } catch (e) { console.error('Err toggleWH:', e); res.status(500).json({ message:'Error cambiar estado.', error:e.message }); }};
const getWarehouseById = async (req, res) => { const id=req.params.id; try { const [whs]=await pool.execute('SELECT warehouse_id, name, address, is_active FROM Warehouses WHERE warehouse_id=?',[id]); if(whs.length===0) return res.status(404).json({ message:`Almacén ID ${id} no.`}); res.status(200).json(whs[0]); } catch (e) { console.error('Err getWHById:', e); res.status(500).json({ message:'Error obtener almacén.', error:e.message }); }};
module.exports = { listWarehouses, createWarehouse, updateWarehouse, toggleWarehouseStatus, getWarehouseById };